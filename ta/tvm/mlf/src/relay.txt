def @main(%input: Tensor[(1, 224, 224, 3), float32], %v_param_1: Tensor[(3, 3, 3, 32), float32], %v_param_2: Tensor[(32), float32], %v_param_3: Tensor[(3, 3, 32, 1), float32], %v_param_4: Tensor[(32), float32], %v_param_5: Tensor[(1, 1, 32, 16), float32], %v_param_6: Tensor[(16), float32], %v_param_7: Tensor[(1, 1, 16, 96), float32], %v_param_8: Tensor[(96), float32], %v_param_9: Tensor[(3, 3, 96, 1), float32], %v_param_10: Tensor[(96), float32], %v_param_11: Tensor[(1, 1, 96, 24), float32], %v_param_12: Tensor[(24), float32], %v_param_13: Tensor[(1, 1, 24, 144), float32], %v_param_14: Tensor[(144), float32], %v_param_15: Tensor[(3, 3, 144, 1), float32], %v_param_16: Tensor[(144), float32], %v_param_17: Tensor[(1, 1, 144, 24), float32], %v_param_18: Tensor[(24), float32], %v_param_19: Tensor[(1, 1, 24, 144), float32], %v_param_20: Tensor[(144), float32], %v_param_21: Tensor[(3, 3, 144, 1), float32], %v_param_22: Tensor[(144), float32], %v_param_23: Tensor[(1, 1, 144, 32), float32], %v_param_24: Tensor[(32), float32], %v_param_25: Tensor[(1, 1, 32, 192), float32], %v_param_26: Tensor[(192), float32], %v_param_27: Tensor[(3, 3, 192, 1), float32], %v_param_28: Tensor[(192), float32], %v_param_29: Tensor[(1, 1, 192, 32), float32], %v_param_30: Tensor[(32), float32], %v_param_31: Tensor[(1, 1, 32, 192), float32], %v_param_32: Tensor[(192), float32], %v_param_33: Tensor[(3, 3, 192, 1), float32], %v_param_34: Tensor[(192), float32], %v_param_35: Tensor[(1, 1, 192, 32), float32], %v_param_36: Tensor[(32), float32], %v_param_37: Tensor[(1, 1, 32, 192), float32], %v_param_38: Tensor[(192), float32], %v_param_39: Tensor[(3, 3, 192, 1), float32], %v_param_40: Tensor[(192), float32], %v_param_41: Tensor[(1, 1, 192, 64), float32], %v_param_42: Tensor[(64), float32], %v_param_43: Tensor[(1, 1, 64, 384), float32], %v_param_44: Tensor[(384), float32], %v_param_45: Tensor[(3, 3, 384, 1), float32], %v_param_46: Tensor[(384), float32], %v_param_47: Tensor[(1, 1, 384, 64), float32], %v_param_48: Tensor[(64), float32], %v_param_49: Tensor[(1, 1, 64, 384), float32], %v_param_50: Tensor[(384), float32], %v_param_51: Tensor[(3, 3, 384, 1), float32], %v_param_52: Tensor[(384), float32], %v_param_53: Tensor[(1, 1, 384, 64), float32], %v_param_54: Tensor[(64), float32], %v_param_55: Tensor[(1, 1, 64, 384), float32], %v_param_56: Tensor[(384), float32], %v_param_57: Tensor[(3, 3, 384, 1), float32], %v_param_58: Tensor[(384), float32], %v_param_59: Tensor[(1, 1, 384, 64), float32], %v_param_60: Tensor[(64), float32], %v_param_61: Tensor[(1, 1, 64, 384), float32], %v_param_62: Tensor[(384), float32], %v_param_63: Tensor[(3, 3, 384, 1), float32], %v_param_64: Tensor[(384), float32], %v_param_65: Tensor[(1, 1, 384, 96), float32], %v_param_66: Tensor[(96), float32], %v_param_67: Tensor[(1, 1, 96, 576), float32], %v_param_68: Tensor[(576), float32], %v_param_69: Tensor[(3, 3, 576, 1), float32], %v_param_70: Tensor[(576), float32], %v_param_71: Tensor[(1, 1, 576, 96), float32], %v_param_72: Tensor[(96), float32], %v_param_73: Tensor[(1, 1, 96, 576), float32], %v_param_74: Tensor[(576), float32], %v_param_75: Tensor[(3, 3, 576, 1), float32], %v_param_76: Tensor[(576), float32], %v_param_77: Tensor[(1, 1, 576, 96), float32], %v_param_78: Tensor[(96), float32], %v_param_79: Tensor[(1, 1, 96, 576), float32], %v_param_80: Tensor[(576), float32], %v_param_81: Tensor[(3, 3, 576, 1), float32], %v_param_82: Tensor[(576), float32], %v_param_83: Tensor[(1, 1, 576, 160), float32], %v_param_84: Tensor[(160), float32], %v_param_85: Tensor[(1, 1, 160, 960), float32], %v_param_86: Tensor[(960), float32], %v_param_87: Tensor[(3, 3, 960, 1), float32], %v_param_88: Tensor[(960), float32], %v_param_89: Tensor[(1, 1, 960, 160), float32], %v_param_90: Tensor[(160), float32], %v_param_91: Tensor[(1, 1, 160, 960), float32], %v_param_92: Tensor[(960), float32], %v_param_93: Tensor[(3, 3, 960, 1), float32], %v_param_94: Tensor[(960), float32], %v_param_95: Tensor[(1, 1, 960, 160), float32], %v_param_96: Tensor[(160), float32], %v_param_97: Tensor[(1, 1, 160, 960), float32], %v_param_98: Tensor[(960), float32], %v_param_99: Tensor[(3, 3, 960, 1), float32], %v_param_100: Tensor[(960), float32], %v_param_101: Tensor[(1, 1, 960, 320), float32], %v_param_102: Tensor[(320), float32], %v_param_103: Tensor[(1, 1, 320, 1280), float32], %v_param_104: Tensor[(1280), float32], %v_param_105: Tensor[(1, 1, 1280, 1001), float32], %v_param_106: Tensor[(1001), float32]) -> Tensor[(1, 1001), float32] {
  %0 = layout_transform(%input, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 3, 224, 224), float32] */;
  %1 = layout_transform(%v_param_1, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(32, 3, 3, 3), float32] */;
  %2 = expand_dims(%v_param_2, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 32), float32] */;
  %3 = nn.conv2d(%0, %1, strides=[2, 2], padding=[0, 0, 1, 1], channels=32, kernel_size=[3, 3]) /* ty=Tensor[(1, 32, 112, 112), float32] */;
  %4 = layout_transform(%2, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 32, 1, 1), float32] */;
  %5 = add(%3, %4) /* ty=Tensor[(1, 32, 112, 112), float32] */;
  %6 = clip(%5, a_min=0f, a_max=6f) /* ty=Tensor[(1, 32, 112, 112), float32] */;
  %7 = layout_transform(%v_param_3, src_layout="HWOI", dst_layout="OIHW") /* ty=Tensor[(32, 1, 3, 3), float32] */;
  %8 = expand_dims(%v_param_4, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 32), float32] */;
  %9 = nn.conv2d(%6, %7, padding=[1, 1, 1, 1], groups=32, channels=32, kernel_size=[3, 3]) /* ty=Tensor[(1, 32, 112, 112), float32] */;
  %10 = layout_transform(%8, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 32, 1, 1), float32] */;
  %11 = add(%9, %10) /* ty=Tensor[(1, 32, 112, 112), float32] */;
  %12 = clip(%11, a_min=0f, a_max=6f) /* ty=Tensor[(1, 32, 112, 112), float32] */;
  %13 = layout_transform(%v_param_5, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(16, 32, 1, 1), float32] */;
  %14 = expand_dims(%v_param_6, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 16), float32] */;
  %15 = nn.conv2d(%12, %13, padding=[0, 0, 0, 0], channels=16, kernel_size=[1, 1]) /* ty=Tensor[(1, 16, 112, 112), float32] */;
  %16 = layout_transform(%14, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 16, 1, 1), float32] */;
  %17 = add(%15, %16) /* ty=Tensor[(1, 16, 112, 112), float32] */;
  %18 = layout_transform(%v_param_7, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(96, 16, 1, 1), float32] */;
  %19 = expand_dims(%v_param_8, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 96), float32] */;
  %20 = nn.conv2d(%17, %18, padding=[0, 0, 0, 0], channels=96, kernel_size=[1, 1]) /* ty=Tensor[(1, 96, 112, 112), float32] */;
  %21 = layout_transform(%19, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 96, 1, 1), float32] */;
  %22 = add(%20, %21) /* ty=Tensor[(1, 96, 112, 112), float32] */;
  %23 = clip(%22, a_min=0f, a_max=6f) /* ty=Tensor[(1, 96, 112, 112), float32] */;
  %24 = layout_transform(%v_param_9, src_layout="HWOI", dst_layout="OIHW") /* ty=Tensor[(96, 1, 3, 3), float32] */;
  %25 = expand_dims(%v_param_10, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 96), float32] */;
  %26 = nn.conv2d(%23, %24, strides=[2, 2], padding=[0, 0, 1, 1], groups=96, channels=96, kernel_size=[3, 3]) /* ty=Tensor[(1, 96, 56, 56), float32] */;
  %27 = layout_transform(%25, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 96, 1, 1), float32] */;
  %28 = add(%26, %27) /* ty=Tensor[(1, 96, 56, 56), float32] */;
  %29 = clip(%28, a_min=0f, a_max=6f) /* ty=Tensor[(1, 96, 56, 56), float32] */;
  %30 = layout_transform(%v_param_11, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(24, 96, 1, 1), float32] */;
  %31 = expand_dims(%v_param_12, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 24), float32] */;
  %32 = nn.conv2d(%29, %30, padding=[0, 0, 0, 0], channels=24, kernel_size=[1, 1]) /* ty=Tensor[(1, 24, 56, 56), float32] */;
  %33 = layout_transform(%31, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 24, 1, 1), float32] */;
  %34 = add(%32, %33) /* ty=Tensor[(1, 24, 56, 56), float32] */;
  %35 = layout_transform(%v_param_13, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(144, 24, 1, 1), float32] */;
  %36 = expand_dims(%v_param_14, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 144), float32] */;
  %37 = nn.conv2d(%34, %35, padding=[0, 0, 0, 0], channels=144, kernel_size=[1, 1]) /* ty=Tensor[(1, 144, 56, 56), float32] */;
  %38 = layout_transform(%36, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 144, 1, 1), float32] */;
  %39 = add(%37, %38) /* ty=Tensor[(1, 144, 56, 56), float32] */;
  %40 = clip(%39, a_min=0f, a_max=6f) /* ty=Tensor[(1, 144, 56, 56), float32] */;
  %41 = layout_transform(%v_param_15, src_layout="HWOI", dst_layout="OIHW") /* ty=Tensor[(144, 1, 3, 3), float32] */;
  %42 = expand_dims(%v_param_16, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 144), float32] */;
  %43 = nn.conv2d(%40, %41, padding=[1, 1, 1, 1], groups=144, channels=144, kernel_size=[3, 3]) /* ty=Tensor[(1, 144, 56, 56), float32] */;
  %44 = layout_transform(%42, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 144, 1, 1), float32] */;
  %45 = add(%43, %44) /* ty=Tensor[(1, 144, 56, 56), float32] */;
  %46 = clip(%45, a_min=0f, a_max=6f) /* ty=Tensor[(1, 144, 56, 56), float32] */;
  %47 = layout_transform(%v_param_17, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(24, 144, 1, 1), float32] */;
  %48 = expand_dims(%v_param_18, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 24), float32] */;
  %49 = nn.conv2d(%46, %47, padding=[0, 0, 0, 0], channels=24, kernel_size=[1, 1]) /* ty=Tensor[(1, 24, 56, 56), float32] */;
  %50 = layout_transform(%48, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 24, 1, 1), float32] */;
  %51 = add(%49, %50) /* ty=Tensor[(1, 24, 56, 56), float32] */;
  %52 = add(%51, %34) /* ty=Tensor[(1, 24, 56, 56), float32] */;
  %53 = layout_transform(%v_param_19, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(144, 24, 1, 1), float32] */;
  %54 = expand_dims(%v_param_20, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 144), float32] */;
  %55 = nn.conv2d(%52, %53, padding=[0, 0, 0, 0], channels=144, kernel_size=[1, 1]) /* ty=Tensor[(1, 144, 56, 56), float32] */;
  %56 = layout_transform(%54, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 144, 1, 1), float32] */;
  %57 = add(%55, %56) /* ty=Tensor[(1, 144, 56, 56), float32] */;
  %58 = clip(%57, a_min=0f, a_max=6f) /* ty=Tensor[(1, 144, 56, 56), float32] */;
  %59 = layout_transform(%v_param_21, src_layout="HWOI", dst_layout="OIHW") /* ty=Tensor[(144, 1, 3, 3), float32] */;
  %60 = expand_dims(%v_param_22, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 144), float32] */;
  %61 = nn.conv2d(%58, %59, strides=[2, 2], padding=[0, 0, 1, 1], groups=144, channels=144, kernel_size=[3, 3]) /* ty=Tensor[(1, 144, 28, 28), float32] */;
  %62 = layout_transform(%60, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 144, 1, 1), float32] */;
  %63 = add(%61, %62) /* ty=Tensor[(1, 144, 28, 28), float32] */;
  %64 = clip(%63, a_min=0f, a_max=6f) /* ty=Tensor[(1, 144, 28, 28), float32] */;
  %65 = layout_transform(%v_param_23, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(32, 144, 1, 1), float32] */;
  %66 = expand_dims(%v_param_24, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 32), float32] */;
  %67 = nn.conv2d(%64, %65, padding=[0, 0, 0, 0], channels=32, kernel_size=[1, 1]) /* ty=Tensor[(1, 32, 28, 28), float32] */;
  %68 = layout_transform(%66, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 32, 1, 1), float32] */;
  %69 = add(%67, %68) /* ty=Tensor[(1, 32, 28, 28), float32] */;
  %70 = layout_transform(%v_param_25, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(192, 32, 1, 1), float32] */;
  %71 = expand_dims(%v_param_26, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 192), float32] */;
  %72 = nn.conv2d(%69, %70, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %73 = layout_transform(%71, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 192, 1, 1), float32] */;
  %74 = add(%72, %73) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %75 = clip(%74, a_min=0f, a_max=6f) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %76 = layout_transform(%v_param_27, src_layout="HWOI", dst_layout="OIHW") /* ty=Tensor[(192, 1, 3, 3), float32] */;
  %77 = expand_dims(%v_param_28, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 192), float32] */;
  %78 = nn.conv2d(%75, %76, padding=[1, 1, 1, 1], groups=192, channels=192, kernel_size=[3, 3]) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %79 = layout_transform(%77, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 192, 1, 1), float32] */;
  %80 = add(%78, %79) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %81 = clip(%80, a_min=0f, a_max=6f) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %82 = layout_transform(%v_param_29, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(32, 192, 1, 1), float32] */;
  %83 = expand_dims(%v_param_30, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 32), float32] */;
  %84 = nn.conv2d(%81, %82, padding=[0, 0, 0, 0], channels=32, kernel_size=[1, 1]) /* ty=Tensor[(1, 32, 28, 28), float32] */;
  %85 = layout_transform(%83, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 32, 1, 1), float32] */;
  %86 = add(%84, %85) /* ty=Tensor[(1, 32, 28, 28), float32] */;
  %87 = add(%86, %69) /* ty=Tensor[(1, 32, 28, 28), float32] */;
  %88 = layout_transform(%v_param_31, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(192, 32, 1, 1), float32] */;
  %89 = expand_dims(%v_param_32, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 192), float32] */;
  %90 = nn.conv2d(%87, %88, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %91 = layout_transform(%89, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 192, 1, 1), float32] */;
  %92 = add(%90, %91) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %93 = clip(%92, a_min=0f, a_max=6f) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %94 = layout_transform(%v_param_33, src_layout="HWOI", dst_layout="OIHW") /* ty=Tensor[(192, 1, 3, 3), float32] */;
  %95 = expand_dims(%v_param_34, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 192), float32] */;
  %96 = nn.conv2d(%93, %94, padding=[1, 1, 1, 1], groups=192, channels=192, kernel_size=[3, 3]) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %97 = layout_transform(%95, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 192, 1, 1), float32] */;
  %98 = add(%96, %97) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %99 = clip(%98, a_min=0f, a_max=6f) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %100 = layout_transform(%v_param_35, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(32, 192, 1, 1), float32] */;
  %101 = expand_dims(%v_param_36, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 32), float32] */;
  %102 = nn.conv2d(%99, %100, padding=[0, 0, 0, 0], channels=32, kernel_size=[1, 1]) /* ty=Tensor[(1, 32, 28, 28), float32] */;
  %103 = layout_transform(%101, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 32, 1, 1), float32] */;
  %104 = add(%102, %103) /* ty=Tensor[(1, 32, 28, 28), float32] */;
  %105 = add(%104, %87) /* ty=Tensor[(1, 32, 28, 28), float32] */;
  %106 = layout_transform(%v_param_37, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(192, 32, 1, 1), float32] */;
  %107 = expand_dims(%v_param_38, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 192), float32] */;
  %108 = nn.conv2d(%105, %106, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %109 = layout_transform(%107, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 192, 1, 1), float32] */;
  %110 = add(%108, %109) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %111 = clip(%110, a_min=0f, a_max=6f) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %112 = layout_transform(%v_param_39, src_layout="HWOI", dst_layout="OIHW") /* ty=Tensor[(192, 1, 3, 3), float32] */;
  %113 = expand_dims(%v_param_40, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 192), float32] */;
  %114 = nn.conv2d(%111, %112, strides=[2, 2], padding=[0, 0, 1, 1], groups=192, channels=192, kernel_size=[3, 3]) /* ty=Tensor[(1, 192, 14, 14), float32] */;
  %115 = layout_transform(%113, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 192, 1, 1), float32] */;
  %116 = add(%114, %115) /* ty=Tensor[(1, 192, 14, 14), float32] */;
  %117 = clip(%116, a_min=0f, a_max=6f) /* ty=Tensor[(1, 192, 14, 14), float32] */;
  %118 = layout_transform(%v_param_41, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(64, 192, 1, 1), float32] */;
  %119 = expand_dims(%v_param_42, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 64), float32] */;
  %120 = nn.conv2d(%117, %118, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %121 = layout_transform(%119, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 64, 1, 1), float32] */;
  %122 = add(%120, %121) /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %123 = layout_transform(%v_param_43, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(384, 64, 1, 1), float32] */;
  %124 = expand_dims(%v_param_44, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 384), float32] */;
  %125 = nn.conv2d(%122, %123, padding=[0, 0, 0, 0], channels=384, kernel_size=[1, 1]) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %126 = layout_transform(%124, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 384, 1, 1), float32] */;
  %127 = add(%125, %126) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %128 = clip(%127, a_min=0f, a_max=6f) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %129 = layout_transform(%v_param_45, src_layout="HWOI", dst_layout="OIHW") /* ty=Tensor[(384, 1, 3, 3), float32] */;
  %130 = expand_dims(%v_param_46, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 384), float32] */;
  %131 = nn.conv2d(%128, %129, padding=[1, 1, 1, 1], groups=384, channels=384, kernel_size=[3, 3]) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %132 = layout_transform(%130, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 384, 1, 1), float32] */;
  %133 = add(%131, %132) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %134 = clip(%133, a_min=0f, a_max=6f) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %135 = layout_transform(%v_param_47, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(64, 384, 1, 1), float32] */;
  %136 = expand_dims(%v_param_48, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 64), float32] */;
  %137 = nn.conv2d(%134, %135, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %138 = layout_transform(%136, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 64, 1, 1), float32] */;
  %139 = add(%137, %138) /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %140 = add(%139, %122) /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %141 = layout_transform(%v_param_49, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(384, 64, 1, 1), float32] */;
  %142 = expand_dims(%v_param_50, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 384), float32] */;
  %143 = nn.conv2d(%140, %141, padding=[0, 0, 0, 0], channels=384, kernel_size=[1, 1]) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %144 = layout_transform(%142, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 384, 1, 1), float32] */;
  %145 = add(%143, %144) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %146 = clip(%145, a_min=0f, a_max=6f) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %147 = layout_transform(%v_param_51, src_layout="HWOI", dst_layout="OIHW") /* ty=Tensor[(384, 1, 3, 3), float32] */;
  %148 = expand_dims(%v_param_52, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 384), float32] */;
  %149 = nn.conv2d(%146, %147, padding=[1, 1, 1, 1], groups=384, channels=384, kernel_size=[3, 3]) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %150 = layout_transform(%148, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 384, 1, 1), float32] */;
  %151 = add(%149, %150) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %152 = clip(%151, a_min=0f, a_max=6f) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %153 = layout_transform(%v_param_53, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(64, 384, 1, 1), float32] */;
  %154 = expand_dims(%v_param_54, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 64), float32] */;
  %155 = nn.conv2d(%152, %153, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %156 = layout_transform(%154, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 64, 1, 1), float32] */;
  %157 = add(%155, %156) /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %158 = add(%157, %140) /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %159 = layout_transform(%v_param_55, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(384, 64, 1, 1), float32] */;
  %160 = expand_dims(%v_param_56, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 384), float32] */;
  %161 = nn.conv2d(%158, %159, padding=[0, 0, 0, 0], channels=384, kernel_size=[1, 1]) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %162 = layout_transform(%160, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 384, 1, 1), float32] */;
  %163 = add(%161, %162) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %164 = clip(%163, a_min=0f, a_max=6f) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %165 = layout_transform(%v_param_57, src_layout="HWOI", dst_layout="OIHW") /* ty=Tensor[(384, 1, 3, 3), float32] */;
  %166 = expand_dims(%v_param_58, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 384), float32] */;
  %167 = nn.conv2d(%164, %165, padding=[1, 1, 1, 1], groups=384, channels=384, kernel_size=[3, 3]) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %168 = layout_transform(%166, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 384, 1, 1), float32] */;
  %169 = add(%167, %168) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %170 = clip(%169, a_min=0f, a_max=6f) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %171 = layout_transform(%v_param_59, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(64, 384, 1, 1), float32] */;
  %172 = expand_dims(%v_param_60, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 64), float32] */;
  %173 = nn.conv2d(%170, %171, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %174 = layout_transform(%172, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 64, 1, 1), float32] */;
  %175 = add(%173, %174) /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %176 = add(%175, %158) /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %177 = layout_transform(%v_param_61, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(384, 64, 1, 1), float32] */;
  %178 = expand_dims(%v_param_62, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 384), float32] */;
  %179 = nn.conv2d(%176, %177, padding=[0, 0, 0, 0], channels=384, kernel_size=[1, 1]) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %180 = layout_transform(%178, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 384, 1, 1), float32] */;
  %181 = add(%179, %180) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %182 = clip(%181, a_min=0f, a_max=6f) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %183 = layout_transform(%v_param_63, src_layout="HWOI", dst_layout="OIHW") /* ty=Tensor[(384, 1, 3, 3), float32] */;
  %184 = expand_dims(%v_param_64, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 384), float32] */;
  %185 = nn.conv2d(%182, %183, padding=[1, 1, 1, 1], groups=384, channels=384, kernel_size=[3, 3]) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %186 = layout_transform(%184, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 384, 1, 1), float32] */;
  %187 = add(%185, %186) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %188 = clip(%187, a_min=0f, a_max=6f) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %189 = layout_transform(%v_param_65, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(96, 384, 1, 1), float32] */;
  %190 = expand_dims(%v_param_66, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 96), float32] */;
  %191 = nn.conv2d(%188, %189, padding=[0, 0, 0, 0], channels=96, kernel_size=[1, 1]) /* ty=Tensor[(1, 96, 14, 14), float32] */;
  %192 = layout_transform(%190, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 96, 1, 1), float32] */;
  %193 = add(%191, %192) /* ty=Tensor[(1, 96, 14, 14), float32] */;
  %194 = layout_transform(%v_param_67, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(576, 96, 1, 1), float32] */;
  %195 = expand_dims(%v_param_68, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 576), float32] */;
  %196 = nn.conv2d(%193, %194, padding=[0, 0, 0, 0], channels=576, kernel_size=[1, 1]) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %197 = layout_transform(%195, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 576, 1, 1), float32] */;
  %198 = add(%196, %197) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %199 = clip(%198, a_min=0f, a_max=6f) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %200 = layout_transform(%v_param_69, src_layout="HWOI", dst_layout="OIHW") /* ty=Tensor[(576, 1, 3, 3), float32] */;
  %201 = expand_dims(%v_param_70, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 576), float32] */;
  %202 = nn.conv2d(%199, %200, padding=[1, 1, 1, 1], groups=576, channels=576, kernel_size=[3, 3]) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %203 = layout_transform(%201, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 576, 1, 1), float32] */;
  %204 = add(%202, %203) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %205 = clip(%204, a_min=0f, a_max=6f) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %206 = layout_transform(%v_param_71, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(96, 576, 1, 1), float32] */;
  %207 = expand_dims(%v_param_72, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 96), float32] */;
  %208 = nn.conv2d(%205, %206, padding=[0, 0, 0, 0], channels=96, kernel_size=[1, 1]) /* ty=Tensor[(1, 96, 14, 14), float32] */;
  %209 = layout_transform(%207, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 96, 1, 1), float32] */;
  %210 = add(%208, %209) /* ty=Tensor[(1, 96, 14, 14), float32] */;
  %211 = add(%210, %193) /* ty=Tensor[(1, 96, 14, 14), float32] */;
  %212 = layout_transform(%v_param_73, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(576, 96, 1, 1), float32] */;
  %213 = expand_dims(%v_param_74, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 576), float32] */;
  %214 = nn.conv2d(%211, %212, padding=[0, 0, 0, 0], channels=576, kernel_size=[1, 1]) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %215 = layout_transform(%213, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 576, 1, 1), float32] */;
  %216 = add(%214, %215) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %217 = clip(%216, a_min=0f, a_max=6f) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %218 = layout_transform(%v_param_75, src_layout="HWOI", dst_layout="OIHW") /* ty=Tensor[(576, 1, 3, 3), float32] */;
  %219 = expand_dims(%v_param_76, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 576), float32] */;
  %220 = nn.conv2d(%217, %218, padding=[1, 1, 1, 1], groups=576, channels=576, kernel_size=[3, 3]) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %221 = layout_transform(%219, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 576, 1, 1), float32] */;
  %222 = add(%220, %221) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %223 = clip(%222, a_min=0f, a_max=6f) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %224 = layout_transform(%v_param_77, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(96, 576, 1, 1), float32] */;
  %225 = expand_dims(%v_param_78, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 96), float32] */;
  %226 = nn.conv2d(%223, %224, padding=[0, 0, 0, 0], channels=96, kernel_size=[1, 1]) /* ty=Tensor[(1, 96, 14, 14), float32] */;
  %227 = layout_transform(%225, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 96, 1, 1), float32] */;
  %228 = add(%226, %227) /* ty=Tensor[(1, 96, 14, 14), float32] */;
  %229 = add(%228, %211) /* ty=Tensor[(1, 96, 14, 14), float32] */;
  %230 = layout_transform(%v_param_79, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(576, 96, 1, 1), float32] */;
  %231 = expand_dims(%v_param_80, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 576), float32] */;
  %232 = nn.conv2d(%229, %230, padding=[0, 0, 0, 0], channels=576, kernel_size=[1, 1]) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %233 = layout_transform(%231, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 576, 1, 1), float32] */;
  %234 = add(%232, %233) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %235 = clip(%234, a_min=0f, a_max=6f) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %236 = layout_transform(%v_param_81, src_layout="HWOI", dst_layout="OIHW") /* ty=Tensor[(576, 1, 3, 3), float32] */;
  %237 = expand_dims(%v_param_82, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 576), float32] */;
  %238 = nn.conv2d(%235, %236, strides=[2, 2], padding=[0, 0, 1, 1], groups=576, channels=576, kernel_size=[3, 3]) /* ty=Tensor[(1, 576, 7, 7), float32] */;
  %239 = layout_transform(%237, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 576, 1, 1), float32] */;
  %240 = add(%238, %239) /* ty=Tensor[(1, 576, 7, 7), float32] */;
  %241 = clip(%240, a_min=0f, a_max=6f) /* ty=Tensor[(1, 576, 7, 7), float32] */;
  %242 = layout_transform(%v_param_83, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(160, 576, 1, 1), float32] */;
  %243 = expand_dims(%v_param_84, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 160), float32] */;
  %244 = nn.conv2d(%241, %242, padding=[0, 0, 0, 0], channels=160, kernel_size=[1, 1]) /* ty=Tensor[(1, 160, 7, 7), float32] */;
  %245 = layout_transform(%243, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 160, 1, 1), float32] */;
  %246 = add(%244, %245) /* ty=Tensor[(1, 160, 7, 7), float32] */;
  %247 = layout_transform(%v_param_85, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(960, 160, 1, 1), float32] */;
  %248 = expand_dims(%v_param_86, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 960), float32] */;
  %249 = nn.conv2d(%246, %247, padding=[0, 0, 0, 0], channels=960, kernel_size=[1, 1]) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %250 = layout_transform(%248, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 960, 1, 1), float32] */;
  %251 = add(%249, %250) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %252 = clip(%251, a_min=0f, a_max=6f) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %253 = layout_transform(%v_param_87, src_layout="HWOI", dst_layout="OIHW") /* ty=Tensor[(960, 1, 3, 3), float32] */;
  %254 = expand_dims(%v_param_88, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 960), float32] */;
  %255 = nn.conv2d(%252, %253, padding=[1, 1, 1, 1], groups=960, channels=960, kernel_size=[3, 3]) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %256 = layout_transform(%254, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 960, 1, 1), float32] */;
  %257 = add(%255, %256) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %258 = clip(%257, a_min=0f, a_max=6f) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %259 = layout_transform(%v_param_89, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(160, 960, 1, 1), float32] */;
  %260 = expand_dims(%v_param_90, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 160), float32] */;
  %261 = nn.conv2d(%258, %259, padding=[0, 0, 0, 0], channels=160, kernel_size=[1, 1]) /* ty=Tensor[(1, 160, 7, 7), float32] */;
  %262 = layout_transform(%260, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 160, 1, 1), float32] */;
  %263 = add(%261, %262) /* ty=Tensor[(1, 160, 7, 7), float32] */;
  %264 = add(%263, %246) /* ty=Tensor[(1, 160, 7, 7), float32] */;
  %265 = layout_transform(%v_param_91, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(960, 160, 1, 1), float32] */;
  %266 = expand_dims(%v_param_92, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 960), float32] */;
  %267 = nn.conv2d(%264, %265, padding=[0, 0, 0, 0], channels=960, kernel_size=[1, 1]) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %268 = layout_transform(%266, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 960, 1, 1), float32] */;
  %269 = add(%267, %268) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %270 = clip(%269, a_min=0f, a_max=6f) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %271 = layout_transform(%v_param_93, src_layout="HWOI", dst_layout="OIHW") /* ty=Tensor[(960, 1, 3, 3), float32] */;
  %272 = expand_dims(%v_param_94, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 960), float32] */;
  %273 = nn.conv2d(%270, %271, padding=[1, 1, 1, 1], groups=960, channels=960, kernel_size=[3, 3]) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %274 = layout_transform(%272, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 960, 1, 1), float32] */;
  %275 = add(%273, %274) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %276 = clip(%275, a_min=0f, a_max=6f) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %277 = layout_transform(%v_param_95, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(160, 960, 1, 1), float32] */;
  %278 = expand_dims(%v_param_96, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 160), float32] */;
  %279 = nn.conv2d(%276, %277, padding=[0, 0, 0, 0], channels=160, kernel_size=[1, 1]) /* ty=Tensor[(1, 160, 7, 7), float32] */;
  %280 = layout_transform(%278, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 160, 1, 1), float32] */;
  %281 = add(%279, %280) /* ty=Tensor[(1, 160, 7, 7), float32] */;
  %282 = add(%281, %264) /* ty=Tensor[(1, 160, 7, 7), float32] */;
  %283 = layout_transform(%v_param_97, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(960, 160, 1, 1), float32] */;
  %284 = expand_dims(%v_param_98, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 960), float32] */;
  %285 = nn.conv2d(%282, %283, padding=[0, 0, 0, 0], channels=960, kernel_size=[1, 1]) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %286 = layout_transform(%284, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 960, 1, 1), float32] */;
  %287 = add(%285, %286) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %288 = clip(%287, a_min=0f, a_max=6f) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %289 = layout_transform(%v_param_99, src_layout="HWOI", dst_layout="OIHW") /* ty=Tensor[(960, 1, 3, 3), float32] */;
  %290 = expand_dims(%v_param_100, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 960), float32] */;
  %291 = nn.conv2d(%288, %289, padding=[1, 1, 1, 1], groups=960, channels=960, kernel_size=[3, 3]) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %292 = layout_transform(%290, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 960, 1, 1), float32] */;
  %293 = add(%291, %292) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %294 = clip(%293, a_min=0f, a_max=6f) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %295 = layout_transform(%v_param_101, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(320, 960, 1, 1), float32] */;
  %296 = expand_dims(%v_param_102, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 320), float32] */;
  %297 = nn.conv2d(%294, %295, padding=[0, 0, 0, 0], channels=320, kernel_size=[1, 1]) /* ty=Tensor[(1, 320, 7, 7), float32] */;
  %298 = layout_transform(%296, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 320, 1, 1), float32] */;
  %299 = add(%297, %298) /* ty=Tensor[(1, 320, 7, 7), float32] */;
  %300 = layout_transform(%v_param_103, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(1280, 320, 1, 1), float32] */;
  %301 = expand_dims(%v_param_104, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 1280), float32] */;
  %302 = nn.conv2d(%299, %300, padding=[0, 0, 0, 0], channels=1280, kernel_size=[1, 1]) /* ty=Tensor[(1, 1280, 7, 7), float32] */;
  %303 = layout_transform(%301, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 1280, 1, 1), float32] */;
  %304 = add(%302, %303) /* ty=Tensor[(1, 1280, 7, 7), float32] */;
  %305 = clip(%304, a_min=0f, a_max=6f) /* ty=Tensor[(1, 1280, 7, 7), float32] */;
  %306 = nn.avg_pool2d(%305, pool_size=[7, 7], padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 1280, 1, 1), float32] */;
  %307 = layout_transform(%v_param_105, src_layout="HWIO", dst_layout="OIHW") /* ty=Tensor[(1001, 1280, 1, 1), float32] */;
  %308 = expand_dims(%v_param_106, axis=0, num_newaxis=3) /* ty=Tensor[(1, 1, 1, 1001), float32] */;
  %309 = nn.conv2d(%306, %307, padding=[0, 0, 0, 0], channels=1001, kernel_size=[1, 1]) /* ty=Tensor[(1, 1001, 1, 1), float32] */;
  %310 = layout_transform(%308, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(1, 1001, 1, 1), float32] */;
  %311 = add(%309, %310) /* ty=Tensor[(1, 1001, 1, 1), float32] */;
  %312 = layout_transform(%311, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(1, 1, 1, 1001), float32] */;
  %313 = reshape(%312, newshape=[1, 1001]) /* ty=Tensor[(1, 1001), float32] */;
  nn.softmax(%313) /* ty=Tensor[(1, 1001), float32] */
}
